name: Release Workflow

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  release:
    if: >
      github.event.pull_request.merged == true &&
      !contains(github.event.pull_request.title, 'Automated Publish Release')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Set up Git User
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"

      - name: Create Release Branch
        run: |
          RELEASE_BRANCH="release-${{ github.run_number }}"
          git checkout -b $RELEASE_BRANCH

      - name: Version Packages
        run: npx lerna version --yes --conventional-commits --no-push --force-publish

      - name: Push Version Bumps
        run: |
          git push --set-upstream origin $RELEASE_BRANCH

      - name: Push Tags
        run: git push origin --tags

      - name: Create Publish PR
        uses: repo-sync/pull-request@v2
        with:
          source_branch: $RELEASE_BRANCH
          destination_branch: main
          pr_title: "Automated Publish Release ${RELEASE_BRANCH}"
          pr_body: "Automated PR to publish the release."