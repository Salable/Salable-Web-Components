name: Release Workflow

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.ADMIN_GH_PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      # Todo: we can re-enable cached pnpm once https://github.com/pnpm/action-setup/issues/99 is resolved
      #      - name: Set up pnpm
      #        uses: pnpm/action-setup@v2
      #        with:
      #          version: 8
      #          run_install: false
      #
      #      - name: Get pnpm store directory
      #        shell: bash
      #        run: |
      #          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      #
      #      - uses: actions/cache@v4
      #        name: Setup pnpm cache
      #        with:
      #          path: ${{ env.STORE_PATH }}
      #          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #          restore-keys: |
      #            ${{ runner.os }}-pnpm-store-

      # Todo: remove this pnpm install once pnpm/action-setup@v2 is back
      - name: Install pnpm
        run: npm install pnpm@8 -g

      - name: Install Dependencies
        run: pnpm install

      - name: Build Packages
        run: pnpm lerna:build

      - name: Set up Git User
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"

      - name: Version Packages
        run: "npx lerna version --yes --conventional-commits --force-publish --message 'chore: version packages [skip ci]'"

      - name: Push Tags
        run: git push origin --tags

      - name: Publish Packages
        run: npx lerna publish from-git --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}